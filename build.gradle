plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'net.neoforged.gradle.userdev' version '7.0.159'
}

if (project.file('../gradletools.gradle').exists()) {
    apply from: '../gradletools.gradle'
} else {
    apply from: 'https://raw.githubusercontent.com/McJtyMods/MultiWorkspace/1.21_neo/gradletools.gradle'
}

group = 'com.mcjty.signtastic'
archivesBaseName = 'signtastic'
java.toolchain.languageVersion = JavaLanguageVersion.of(21)

repos()
at()
runs()
jars()

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    mc()
    jei()
    top()
    mcjtylib()
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

cfdeps(['the-one-probe'], ['mcjtylib'], [])
modrinth(['the-one-probe'], ['mcjtylib'], [])


subsystems {
    parchment {
        minecraftVersion = "1.21"
        mappingsVersion = "2024.06.23"
    }
}

